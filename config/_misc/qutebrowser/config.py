# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Aliases
# Type: Dict
c.aliases = {'q': 'quit', 'w': 'session-save', 'wq': 'quit --save'}

# Bindings
config.bind('pt', 'tab-pin')
#config.bind(';I','hint images spawn --output-messages wget -P "~/Downloads/screenshots/" {hint-url}')

# Pass Management


# Setting default page for opening new tabs or new windows
c.url.default_page = 'file:///home/solace/.config/_misc/qutebrowser/homepage.html'
c.url.start_pages = 'file:///home/solace/.config/_misc/qutebrowser/homepage.html'

# Search engine
c.url.searchengines = {"DEFAULT": "https://duckduckgo.com/?q={}",
            "am": "https://www.amazon.com/s?k={}",
            "aw": "https://wiki.archlinux.org/?search={}",
            "tw": "https://twitch.tv/{}",
            "yt": "https://www.youtube.com/results?search_query={}"}

# Adblock
c.content.blocking.method = 'adblock'
c.content.blocking.adblock.lists = [
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/legacy.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/filters.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/filters-2020.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/filters-2021.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/badware.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/privacy.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/badlists.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/annoyances.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/resource-abuse.txt",
        "https://github.com/uBlockOrigin/uAssets/raw/master/filters/unbreak.txt"]

# Flags
c.qt.args=["enable-gpu-rasterization",
           "ignore-gpu-blocklist",
           "content.prefers_reduced_motion",
           "enable-accelerated-video-decode"]

# History
config.set("completion.web_history.max_items", 0)
config.set("completion.cmd_history_max_items", 0)

# Privacy
config.set("content.webgl", False, "*",)
config.set("content.geolocation", False,)
config.set("content.canvas_reading", False,)
config.set("content.private_browsing", True,)
config.set("content.headers.do_not_track", True,)
config.set("content.webrtc_ip_handling_policy", "default-public-interface-only")

# Directory to save downloads to
# Type: Directory
c.downloads.location.directory = '~/Downloads'

# Application name
c.window.title_format = '{perc}{current_title}{title_sep}Qutebrowser'

# When to show the tab bar
# Type: String
# Valid values:
#   - always: Always show tab bar
#   - never: Always hide the tab bar
#   - multiple: Hide the tab bar if only one tab is open
#   - switching: Show the tab bar when switching tabs
c.tabs.show = 'multiple'

# Set dark-mode
config.set("colors.webpage.darkmode.enabled", True)

# Text color of the completion widget. May be a single color to use for
# all columns or a list of three colors, one for each column.
# Type: List of QtColor, or QtColor
c.colors.completion.fg = ['#9cc4ff', 'white', 'white']

# Background color for completion widget for even rows
c.colors.tabs.even.bg = 'grey'

# Background color for completion widget for odd rows
c.colors.tabs.odd.bg = 'darkgrey'

# Foreground color of completion widget category headers.
# Type: QtColor
c.colors.completion.category.fg = '#e1acff'

# Background color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.bg = 'qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #000000, stop:1 #232429)'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.top = '#3f4147'

# Bottom border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.bottom = '#3f4147'

# Foreground color of the selected completion item.
# Type: QtColor
c.colors.completion.item.selected.fg = '#282c34'

# Background color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.bg = '#ecbe7b'

# Foreground color of the matched text in the selected completion item.
# Type: QtColor
c.colors.completion.item.selected.match.fg = '#c678dd'

# Foreground color of the matched text in the completion.
# Type: QtColor
c.colors.completion.match.fg = '#c678dd'

# Color of the scrollbar handle in the completion view.
# Type: QssColor
c.colors.completion.scrollbar.fg = 'white'

# Background color for the download bar.
# Type: QssColor
c.colors.downloads.bar.bg = '#282c34'

# Background color for downloads with errors.
# Type: QtColor
c.colors.downloads.error.bg = '#ff6c6b'

# Font color for hints.
# Type: QssColor
c.colors.hints.fg = '#282c34'

# Font color for the matched part of hints.
# Type: QtColor
c.colors.hints.match.fg = '#98be65'

# Background color of an info message.
# Type: QssColor
c.colors.messages.info.bg = '#282c34'

# Background color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.bg = '#282c34'

# Foreground color of the statusbar in insert mode.
# Type: QssColor
c.colors.statusbar.insert.fg = 'white'

# Background color of the statusbar in insert mode.
# Type: QssColor
c.colors.statusbar.insert.bg = '#497920'

# Background color of the statusbar in passthrough mode.
# Type: QssColor
c.colors.statusbar.passthrough.bg = '#34426f'

# Background color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.bg = '#282c34'

# Foreground color of the URL in the statusbar when there's a warning.
# Type: QssColor
c.colors.statusbar.url.warn.fg = 'yellow'

# Background color of the tab bar.
# Type: QssColor
c.colors.tabs.bar.bg = '#1c1f34'

# Background color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.bg = '#282c34'

# Background color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.bg = '#282c34'

# Background color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.bg = '#282c34'

# Background color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.bg = '#282c34'

# Background color of pinned unselected odd tabs.
# Type: QtColor
c.colors.tabs.pinned.odd.bg = 'seagreen'

# Background color of pinned unselected even tabs.
# Type: QtColor
c.colors.tabs.pinned.even.bg = 'darkseagreen'

# Background color of pinned selected odd tabs.
# Type: QtColor
c.colors.tabs.pinned.selected.odd.bg = '#282c34'

# Background color of pinned selected even tabs.
# Type: QtColor
c.colors.tabs.pinned.selected.even.bg = '#282c34'

# Default font family to use. Whenever "default_family" is used
# Type: List of Font, or Font
c.fonts.default_family = '"Iosevka Regular"'

# Default font size to use. Whenever "default_size is used
# Type: String
c.fonts.default_size = '12pt'

# Font used in completion widget
# Type: Font
c.fonts.completion.entry = '12pt "Iosevka Regular"'

# Font used for debugging console
# Type: Font
c.fonts.debug_console = '12pt "Iosevka Regular"'

# Font used for prompts
# Type: Font
c.fonts.prompts = '12pt "Iosevka Regular"'

# Font used in the statusbar
# Type: Font
c.fonts.statusbar = '12pt "Iosevka Regular"'

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(False)

# Type: String
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')

# Type: String
config.set('content.cookies.accept', 'all', 'devtools://*')

# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0', 'https://accounts.google.com/*')

# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99 Safari/537.36', 'https://*.slack.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')
